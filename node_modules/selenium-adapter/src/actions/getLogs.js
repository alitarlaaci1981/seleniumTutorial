'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _logging = require('selenium-webdriver/lib/logging');

var _logs = require('./../logs');

var _logs2 = _interopRequireDefault(_logs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = (() => {
  var _ref = _asyncToGenerator(function* (adapter, filter = function () {
    return true;
  }) {
    const webDriverLogEntries = yield adapter.manage().logs().get(_logging.Type.BROWSER);

    const logs = [];
    for (const logEntry of webDriverLogEntries) {
      for (const parseLog of _logs2.default) {
        const log = parseLog(logEntry);
        if (log) {
          logs.push(log);
        }
      }
    }
    return logs;
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldExvZ3MuanMiXSwibmFtZXMiOlsiYWRhcHRlciIsImZpbHRlciIsIndlYkRyaXZlckxvZ0VudHJpZXMiLCJtYW5hZ2UiLCJsb2dzIiwiZ2V0IiwiQlJPV1NFUiIsImxvZ0VudHJ5IiwicGFyc2VMb2ciLCJsb2ciLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQTs7QUFHQTs7Ozs7Ozs7OytCQUVlLFdBQ2JBLE9BRGEsRUFFYkMsU0FBeUI7QUFBQSxXQUFNLElBQU47QUFBQSxHQUZaLEVBR1E7QUFDckIsVUFBTUMsc0JBQXNCLE1BQU1GLFFBQy9CRyxNQUQrQixHQUUvQkMsSUFGK0IsR0FHL0JDLEdBSCtCLENBRzNCLGNBQUtDLE9BSHNCLENBQWxDOztBQUtBLFVBQU1GLE9BQU8sRUFBYjtBQUNBLFNBQUssTUFBTUcsUUFBWCxJQUF1QkwsbUJBQXZCLEVBQTRDO0FBQzFDLFdBQUssTUFBTU0sUUFBWCxvQkFBbUM7QUFDakMsY0FBTUMsTUFBTUQsU0FBU0QsUUFBVCxDQUFaO0FBQ0EsWUFBSUUsR0FBSixFQUFTO0FBQ1BMLGVBQUtNLElBQUwsQ0FBVUQsR0FBVjtBQUNEO0FBQ0Y7QUFDRjtBQUNELFdBQU9MLElBQVA7QUFDRCxHIiwiZmlsZSI6ImdldExvZ3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuaW1wb3J0IHsgVHlwZSB9IGZyb20gJ3NlbGVuaXVtLXdlYmRyaXZlci9saWIvbG9nZ2luZydcbmltcG9ydCB0eXBlIHsgV2ViRHJpdmVyIH0gZnJvbSAnc2VsZW5pdW0tYWRhcHRlci9zcmMvd2ViZHJpdmVyJ1xuaW1wb3J0IHR5cGUgeyBMb2cgfSBmcm9tICdzZWxlbml1bS1hZGFwdGVyL3NyYy9sb2dzJ1xuaW1wb3J0IGxvZ1BhcnNlcnMgZnJvbSAnc2VsZW5pdW0tYWRhcHRlci9zcmMvbG9ncydcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24oXG4gIGFkYXB0ZXI6IFdlYkRyaXZlcixcbiAgZmlsdGVyOiBMb2cgPT4gYm9vbGVhbiA9ICgpID0+IHRydWVcbik6IFByb21pc2U8QXJyYXk8TG9nPj4ge1xuICBjb25zdCB3ZWJEcml2ZXJMb2dFbnRyaWVzID0gYXdhaXQgYWRhcHRlclxuICAgIC5tYW5hZ2UoKVxuICAgIC5sb2dzKClcbiAgICAuZ2V0KFR5cGUuQlJPV1NFUilcblxuICBjb25zdCBsb2dzID0gW11cbiAgZm9yIChjb25zdCBsb2dFbnRyeSBvZiB3ZWJEcml2ZXJMb2dFbnRyaWVzKSB7XG4gICAgZm9yIChjb25zdCBwYXJzZUxvZyBvZiBsb2dQYXJzZXJzKSB7XG4gICAgICBjb25zdCBsb2cgPSBwYXJzZUxvZyhsb2dFbnRyeSlcbiAgICAgIGlmIChsb2cpIHtcbiAgICAgICAgbG9ncy5wdXNoKGxvZylcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGxvZ3Ncbn1cbiJdfQ==