'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _url = require('url');

var _ = require('./../..');

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const errorTypes = ['CONNECTION_ERROR', 'HTTP_ERROR'];

exports.default = (() => {
  var _ref = _asyncToGenerator(function* (adapter, url) {
    yield adapter.get(url);

    const errorLogs = yield (0, _.getLogs)(adapter, function (log) {
      return urlsEqual(url, log.url) && errorTypes.includes(log.type);
    });
    for (const _ref2 of errorLogs) {
      const { message } = _ref2;

      throw new Error(message);
    }
  });

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
})();

function urlsEqual(url1, url2) {
  return new _url.URL(url1).toString() === new _url.URL(url2).toString();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmlnYXRlLmpzIl0sIm5hbWVzIjpbImVycm9yVHlwZXMiLCJhZGFwdGVyIiwidXJsIiwiZ2V0IiwiZXJyb3JMb2dzIiwidXJsc0VxdWFsIiwibG9nIiwiaW5jbHVkZXMiLCJ0eXBlIiwibWVzc2FnZSIsIkVycm9yIiwidXJsMSIsInVybDIiLCJ0b1N0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxhQUFhLENBQUMsa0JBQUQsRUFBcUIsWUFBckIsQ0FBbkI7OzsrQkFFZSxXQUFlQyxPQUFmLEVBQW1DQyxHQUFuQyxFQUErRDtBQUM1RSxVQUFNRCxRQUFRRSxHQUFSLENBQVlELEdBQVosQ0FBTjs7QUFFQSxVQUFNRSxZQUFZLE1BQU0sZUFDdEJILE9BRHNCLEVBRXRCO0FBQUEsYUFBT0ksVUFBVUgsR0FBVixFQUFlSSxJQUFJSixHQUFuQixLQUEyQkYsV0FBV08sUUFBWCxDQUFvQkQsSUFBSUUsSUFBeEIsQ0FBbEM7QUFBQSxLQUZzQixDQUF4QjtBQUlBLHdCQUEwQkosU0FBMUIsRUFBcUM7QUFBQSxZQUExQixFQUFFSyxPQUFGLEVBQTBCOztBQUNuQyxZQUFNLElBQUlDLEtBQUosQ0FBVUQsT0FBVixDQUFOO0FBQ0Q7QUFDRixHOzs7Ozs7O0FBRUQsU0FBU0osU0FBVCxDQUFtQk0sSUFBbkIsRUFBaUNDLElBQWpDLEVBQXdEO0FBQ3RELFNBQU8sYUFBUUQsSUFBUixFQUFjRSxRQUFkLE9BQTZCLGFBQVFELElBQVIsRUFBY0MsUUFBZCxFQUFwQztBQUNEIiwiZmlsZSI6Im5hdmlnYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cbmltcG9ydCB0eXBlIHsgV2ViRHJpdmVyIH0gZnJvbSAnc2VsZW5pdW0tYWRhcHRlci9zcmMvd2ViZHJpdmVyJ1xuaW1wb3J0IHsgVVJMIH0gZnJvbSAndXJsJ1xuaW1wb3J0IHsgZ2V0TG9ncyB9IGZyb20gJ3NlbGVuaXVtLWFkYXB0ZXInXG5cbmNvbnN0IGVycm9yVHlwZXMgPSBbJ0NPTk5FQ1RJT05fRVJST1InLCAnSFRUUF9FUlJPUiddXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uKGFkYXB0ZXI6IFdlYkRyaXZlciwgdXJsOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgYWRhcHRlci5nZXQodXJsKVxuXG4gIGNvbnN0IGVycm9yTG9ncyA9IGF3YWl0IGdldExvZ3MoXG4gICAgYWRhcHRlcixcbiAgICBsb2cgPT4gdXJsc0VxdWFsKHVybCwgbG9nLnVybCkgJiYgZXJyb3JUeXBlcy5pbmNsdWRlcyhsb2cudHlwZSlcbiAgKVxuICBmb3IgKGNvbnN0IHsgbWVzc2FnZSB9IG9mIGVycm9yTG9ncykge1xuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKVxuICB9XG59XG5cbmZ1bmN0aW9uIHVybHNFcXVhbCh1cmwxOiBzdHJpbmcsIHVybDI6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gbmV3IFVSTCh1cmwxKS50b1N0cmluZygpID09PSBuZXcgVVJMKHVybDIpLnRvU3RyaW5nKClcbn1cbiJdfQ==